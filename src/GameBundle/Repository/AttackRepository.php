<?php

namespace GameBundle\Repository;
use GameBundle\Entity\Player;

/**
 * AttackRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AttackRepository extends \Doctrine\ORM\EntityRepository
{
    public function getAttacks($id){
        $time = time();
        return $this->createQueryBuilder('a')
            ->select('a.id', 'p.nickname as attacker','p2.nickname as target', 'a.time-:time as time')
            ->innerJoin( 'GameBundle\Entity\Player', 'p', 'with' ,'a.attackerId = p.id')
            ->innerJoin( 'GameBundle\Entity\Player', 'p2', 'with','a.targetId = p2.id')
            ->Where('a.attackerId = :id')
            ->orWhere('a.targetId = :id')
            ->andWhere('a.time > :time')
            ->setParameter('id', $id)
            ->setParameter('time', $time)
            ->getQuery()
            ->execute();
    }

    public function getReports($id){
        $time = time();
        return $this->createQueryBuilder('a')
            ->select('a.id', 'p.nickname as attacker','p2.nickname as target', 'a.resource','p3.nickname as winner')
            ->innerJoin( 'GameBundle\Entity\Player', 'p', 'with' ,'a.attackerId = p.id')
            ->innerJoin( 'GameBundle\Entity\Player', 'p2', 'with','a.targetId = p2.id')
            ->innerJoin( 'GameBundle\Entity\Player', 'p3', 'with','a.winner = p3.id')
            ->Where('a.attackerId = :id')
            ->orWhere('a.targetId = :id')
            ->andWhere('a.time <= :time')
            ->setParameter('id', $id)
            ->setParameter('time', $time)
            ->getQuery()
            ->execute();
    }
}
